{"mappings":"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","sources":["dataview/index.ts"],"sourcesContent":["import { _WeakMap } from \"@portal-solutions/semble-weak-map\";\nimport { hide } from \"@portal-solutions/semble-common\";\nconst _data: WeakMap<any, number[]> = new _WeakMap();\n\nfunction define(object, props) {\n  for (var key in props) {\n    object[key] = props[key];\n  }\n}\nconst _Uint8Array: typeof Uint8Array =\n  \"Uint8Array\" in globalThis\n    ? globalThis.Uint8Array\n    : (class UnusedUint8Array {} as any);\n\nexport const _ArrayBuffer: typeof ArrayBuffer =\n  \"ArrayBuffer\" in globalThis\n    ? globalThis.ArrayBuffer\n    : ((function () {\n        var min = Math.min,\n          max = Math.max,\n          char = String.fromCharCode;\n\n        var chars: { [a: string]: number } = {},\n          indices: string[] = [];\n\n        // create cached mapping of characters to char codes and back\n        void (function () {\n          for (var i = 0; i < 0x100; ++i) {\n            chars[(indices[i] = char(i))] = i;\n            if (i >= 0x80) {\n              chars[char(0xf700 + i)] = i;\n            }\n          }\n        })();\n\n        // read a string into an array of bytes\n        function readString(string) {\n          var array: number[] = [],\n            cycles = string.length % 8,\n            index = 0;\n\n          while (cycles--) {\n            array[index] = chars[string[index++]];\n          }\n\n          cycles = string.length >> 3;\n\n          while (cycles--) {\n            array.push(\n              chars[string[index]],\n              chars[string[index + 1]],\n              chars[string[index + 2]],\n              chars[string[index + 3]],\n              chars[string[index + 4]],\n              chars[string[index + 5]],\n              chars[string[index + 6]],\n              chars[string[index + 7]]\n            );\n            index += 8;\n          }\n\n          return array;\n        }\n\n        // write an array of bytes to a string\n        function writeString(array) {\n          try {\n            return char.apply(null, array);\n          } catch (e) {}\n\n          var string = \"\",\n            cycles = array.length % 8,\n            index = 0;\n\n          while (cycles--) {\n            string += indices[array[index++]];\n          }\n\n          cycles = array.length >> 3;\n\n          while (cycles--) {\n            string +=\n              indices[array[index]] +\n              indices[array[index + 1]] +\n              indices[array[index + 2]] +\n              indices[array[index + 3]] +\n              indices[array[index + 4]] +\n              indices[array[index + 5]] +\n              indices[array[index + 6]] +\n              indices[array[index + 7]];\n            index += 8;\n          }\n\n          return string;\n        }\n\n        // create a new array of given size where each element is 0\n        function zerodArray(size) {\n          var data = new Array(size);\n\n          for (var i = 0; i < size; i++) {\n            data[i] = 0;\n          }\n\n          return data;\n        }\n\n        // ###################\n        // ### ArrayBuffer ###\n        // ###################\n\n        function ArrayBuffer(length) {\n          if (length instanceof _ArrayBuffer) {\n            _data.set(\n              this,\n              (_data.get(length) ?? [...new _Uint8Array(length)]).slice()\n            );\n          } else if (typeof length === \"string\") {\n            _data.set(this, readString(length));\n          } else {\n            if ((length >>= 0) < 0) {\n              throw new RangeError(\"ArrayBuffer length must be non-negative\");\n            }\n            _data.set(this, zerodArray(length));\n          }\n\n          this.byteLength = _data.get(this)!.length;\n          //   hide(this, '_data');\n        }\n\n        define(ArrayBuffer, {\n          toByteString: function toByteString(arraybuffer) {\n            if (!(arraybuffer instanceof ArrayBuffer)) {\n              throw new TypeError(\n                \"ArrayBuffer.toByteString requires an ArrayBuffer\"\n              );\n            }\n\n            return writeString(_data.get(arraybuffer)!);\n          },\n        });\n\n        define(ArrayBuffer.prototype, {\n          slice: function slice(begin, end) {\n            var arraybuffer = new ArrayBuffer(0);\n\n            _data.set(arraybuffer, _data.get(this)!.slice(begin, end));\n            arraybuffer.byteLength = _data.get(arraybuffer)!.length;\n\n            return arraybuffer;\n          },\n        });\n\n        return ArrayBuffer;\n      })() as any);\n\nexport const _DataView: typeof DataView =\n  \"DataView\" in globalThis\n    ? globalThis.DataView\n    : ((function () {\n        var log = Math.log,\n          pow = Math.pow,\n          LN2 = Math.LN2;\n\n        // Joyent copyright applies to readFloat and writeFloat\n\n        // Copyright Joyent, Inc. and other Node contributors.\n        //\n        // Permission is hereby granted, free of charge, to any person obtaining a\n        // copy of this software and associated documentation files (the\n        // \"Software\"), to deal in the Software without restriction, including\n        // without limitation the rights to use, copy, modify, merge, publish,\n        // distribute, sublicense, and/or sell copies of the Software, and to permit\n        // persons to whom the Software is furnished to do so, subject to the\n        // following conditions:\n        //\n        // The above copyright notice and this permission notice shall be included\n        // in all copies or substantial portions of the Software.\n        //\n        // THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n        // OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n        // MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n        // NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n        // DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n        // OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n        // USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n        function readFloat(dataview, offset, littleEndian, mLen, bytes) {\n          var buffer =\n              _data.get(dataview.buffer) ?? new _Uint8Array(dataview.buffer),\n            offset = dataview.byteOffset + offset,\n            e,\n            m,\n            eLen = bytes * 8 - mLen - 1,\n            eMax = (1 << eLen) - 1,\n            eBias = eMax >> 1,\n            nBits = -7,\n            i = littleEndian ? bytes - 1 : 0,\n            d = littleEndian ? -1 : 1,\n            s = buffer[offset + i];\n\n          i += d;\n\n          e = s & ((1 << -nBits) - 1);\n          s >>= -nBits;\n          nBits += eLen;\n          for (\n            ;\n            nBits > 0;\n            e = e * 0x100 + buffer[offset + i], i += d, nBits -= 8\n          );\n\n          m = e & ((1 << -nBits) - 1);\n          e >>= -nBits;\n          nBits += mLen;\n          for (\n            ;\n            nBits > 0;\n            m = m * 0x100 + buffer[offset + i], i += d, nBits -= 8\n          );\n\n          if (e === 0) {\n            e = 1 - eBias;\n          } else if (e === eMax) {\n            return m ? NaN : s ? -Infinity : Infinity;\n          } else {\n            m = m + pow(2, mLen);\n            e = e - eBias;\n          }\n          return (s ? -1 : 1) * m * pow(2, e - mLen);\n        }\n\n        function writeFloat(\n          dataview,\n          offset,\n          value,\n          littleEndian,\n          mLen,\n          bytes\n        ) {\n          var buffer =\n              _data.get(dataview.buffer) ?? new _Uint8Array(dataview.buffer),\n            offset = dataview.byteOffset + offset,\n            e,\n            m,\n            c,\n            eLen = bytes * 8 - mLen - 1,\n            eMax = (1 << eLen) - 1,\n            eBias = eMax >> 1,\n            rt = mLen === 23 ? pow(2, -24) - pow(2, -77) : 0,\n            i = littleEndian ? 0 : bytes - 1,\n            d = littleEndian ? 1 : -1,\n            s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0;\n\n          value < 0 && (value = -value);\n\n          if (value !== value || value === Infinity) {\n            m = value !== value ? 1 : 0;\n            e = eMax;\n          } else {\n            e = (log(value) / LN2) | 0;\n            if (value * (c = pow(2, -e)) < 1) {\n              e--;\n              c *= 2;\n            }\n            if (e + eBias >= 1) {\n              value += rt / c;\n            } else {\n              value += rt * pow(2, 1 - eBias);\n            }\n            if (value * c >= 2) {\n              e++;\n              c /= 2;\n            }\n\n            if (e + eBias >= eMax) {\n              m = 0;\n              e = eMax;\n            } else if (e + eBias >= 1) {\n              m = (value * c - 1) * pow(2, mLen);\n              e = e + eBias;\n            } else {\n              m = value * pow(2, eBias - 1) * pow(2, mLen);\n              e = 0;\n            }\n          }\n\n          for (\n            ;\n            mLen >= 8;\n            buffer[offset + i] = m & 0xff, i += d, m /= 0x100, mLen -= 8\n          );\n\n          e = (e << mLen) | m;\n          eLen += mLen;\n          for (\n            ;\n            eLen > 0;\n            buffer[offset + i] = e & 0xff, i += d, e /= 0x100, eLen -= 8\n          );\n\n          buffer[offset + i - d] |= s * 0x80;\n        }\n\n        var le2 = [1, 0],\n          le4 = [3, 2, 1, 0],\n          be2 = [0, 1],\n          be4 = [0, 1, 2, 3];\n\n        function readUint8(dataview, byteOffset) {\n          var buffer =\n              _data.get(dataview.buffer) ?? new _Uint8Array(dataview.buffer),\n            offset = byteOffset + dataview.byteOffset;\n\n          return buffer[offset];\n        }\n\n        function readUint16(dataview, byteOffset, littleEndian) {\n          var buffer =\n              _data.get(dataview.buffer) ?? new _Uint8Array(dataview.buffer),\n            offset = byteOffset + dataview.byteOffset,\n            order = littleEndian ? le2 : be2;\n\n          var b0 = buffer[offset + order[0]],\n            b1 = buffer[offset + order[1]] << 8;\n\n          return b0 | b1;\n        }\n\n        function readUint32(dataview, byteOffset, littleEndian) {\n          var buffer =\n              _data.get(dataview.buffer) ?? new _Uint8Array(dataview.buffer),\n            offset = byteOffset + dataview.byteOffset,\n            order = littleEndian ? le4 : be4;\n\n          var b0 = buffer[offset + order[0]],\n            b1 = buffer[offset + order[1]] << 8,\n            b2 = buffer[offset + order[2]] << 16,\n            b3 = buffer[offset + order[3]] << 24;\n\n          return b0 | b1 | b2 | b3;\n        }\n\n        function boundsCheck(offset, size, max) {\n          if (offset < 0) {\n            throw new RangeError(\"Tried to write to a negative index\");\n          } else if (offset + size > max) {\n            throw new RangeError(\n              \"Tried to write \" +\n                size +\n                \" bytes past the end of a buffer at index \" +\n                offset +\n                \" of \" +\n                max\n            );\n          }\n        }\n\n        function writeUint8(dataview, byteOffset, value) {\n          var buffer =\n              _data.get(dataview.buffer) ?? new _Uint8Array(dataview.buffer),\n            offset = byteOffset + dataview.byteOffset;\n\n          boundsCheck(offset, 1, buffer.length);\n\n          buffer[offset] = value & 0xff;\n        }\n\n        function writeUint16(dataview, byteOffset, value, littleEndian) {\n          var buffer =\n              _data.get(dataview.buffer) ?? new _Uint8Array(dataview.buffer),\n            order = littleEndian ? le2 : be2,\n            offset = byteOffset + dataview.byteOffset;\n\n          boundsCheck(offset, 2, buffer.length);\n\n          buffer[offset + order[0]] = value & 0xff;\n          buffer[offset + order[1]] = (value >>> 8) & 0xff;\n        }\n\n        function writeUint32(dataview, byteOffset, value, littleEndian) {\n          var buffer =\n              _data.get(dataview.buffer) ?? new _Uint8Array(dataview.buffer),\n            order = littleEndian ? le4 : be4,\n            offset = byteOffset + dataview.byteOffset;\n\n          boundsCheck(offset, 4, buffer.length);\n\n          buffer[offset + order[0]] = value & 0xff;\n          buffer[offset + order[1]] = (value >>> 8) & 0xff;\n          buffer[offset + order[2]] = (value >>> 16) & 0xff;\n          buffer[offset + order[3]] = (value >>> 24) & 0xff;\n        }\n\n        // ################\n        // ### DataView ###\n        // ################\n\n        function DataView(buffer, byteOffset, byteLength) {\n          if (!(buffer instanceof _ArrayBuffer)) {\n            throw new TypeError(\n              \"DataView must be initialized with an ArrayBuffer\"\n            );\n          }\n\n          if (byteOffset === undefined) {\n            this.byteOffset = (buffer as any).byteOffset >> 0;\n          } else {\n            this.byteOffset = byteOffset >> 0;\n          }\n\n          if (this.byteOffset < 0) {\n            throw new RangeError(\"DataView byteOffset must be non-negative\");\n          }\n\n          if (byteLength === undefined) {\n            this.byteLength =\n              ((buffer as any).byteLength - this.byteOffset) >> 0;\n          } else {\n            this.byteLength = byteLength >> 0;\n          }\n\n          if (this.byteLength < 0) {\n            throw new RangeError(\"DataView byteLength must be non-negative\");\n          }\n\n          if (this.byteOffset + this.byteLength > (buffer as any).byteLength) {\n            throw new RangeError(\n              \"DataView byteOffset and byteLength greater than ArrayBuffer byteLength\"\n            );\n          }\n\n          this.buffer = buffer;\n        }\n\n        define(DataView.prototype, {\n          getFloat32: function getFloat32(byteOffset, littleEndian) {\n            return readFloat(this, byteOffset, littleEndian, 23, 4);\n          },\n          getFloat64: function getFloat64(byteOffset, littleEndian) {\n            return readFloat(this, byteOffset, littleEndian, 52, 8);\n          },\n          getInt8: function getInt8(byteOffset) {\n            var n = readUint8(this, byteOffset);\n            return n & 0x80 ? n ^ -0x100 : n;\n          },\n          getInt16: function getInt16(byteOffset, littleEndian) {\n            var n = readUint16(this, byteOffset, littleEndian);\n            return n & 0x8000 ? n ^ -0x10000 : n;\n          },\n          getInt32: function getInt32(byteOffset, littleEndian) {\n            var n = readUint32(this, byteOffset, littleEndian);\n            return n & 0x80000000 ? n ^ -0x100000000 : n;\n          },\n          getUint8: function getUint8(byteOffset) {\n            return readUint8(this, byteOffset);\n          },\n          getUint16: function getUint16(byteOffset, littleEndian) {\n            return readUint16(this, byteOffset, littleEndian);\n          },\n          getUint32: function getUint32(byteOffset, littleEndian) {\n            return readUint32(this, byteOffset, littleEndian);\n          },\n          setFloat32: function setFloat32(byteOffset, value, littleEndian) {\n            writeFloat(this, byteOffset, value, littleEndian, 23, 4);\n          },\n          setFloat64: function setFloat64(byteOffset, value, littleEndian) {\n            writeFloat(this, byteOffset, value, littleEndian, 52, 8);\n          },\n          setInt8: function setInt8(byteOffset, value) {\n            writeUint8(this, byteOffset, value < 0 ? value | 0x100 : value);\n          },\n          setInt16: function setInt16(byteOffset, value, littleEndian) {\n            writeUint16(\n              this,\n              byteOffset,\n              value < 0 ? value | 0x10000 : value,\n              littleEndian\n            );\n          },\n          setInt32: function setInt32(byteOffset, value, littleEndian) {\n            writeUint32(\n              this,\n              byteOffset,\n              value < 0 ? value | 0x100000000 : value,\n              littleEndian\n            );\n          },\n          setUint8: function setUint8(byteOffset, value) {\n            writeUint8(this, byteOffset, value);\n          },\n          setUint16: function setUint16(byteOffset, value, littleEndian) {\n            writeUint16(this, byteOffset, value, littleEndian);\n          },\n          setUint32: function setUint32(byteOffset, value, littleEndian) {\n            writeUint32(this, byteOffset, value, littleEndian);\n          },\n        });\n\n        return DataView;\n      })() as any);\nexport const _DataView_prototype: any = ((x) =>\n  Object.keys(x).reduce((p, c) => ({ ...p, [c]: x[c].call.bind(x[c]) }), {}))(\n  _DataView.prototype\n);\n"],"names":[],"version":3,"file":"index.js.map"}