{"mappings":"AAAA,OAAO,IAAI,UAAU,OAAO,OAkCpB,CAAC","sources":["weak-map/weak-map/index.ts","weak-map/index.ts"],"sourcesContent":[null,"export let _WeakMap: typeof WeakMap = 'WeakMap' in globalThis ? globalThis.WeakMap : class WeakMapTemp {\n    static symbol = 'Symbol' in globalThis ? globalThis.Symbol(`__SembleWeakMap`) : `__SembleWeakMap`;\n    static {\n        let symbol = this.symbol;\n        for (var a of ['seal', 'freeze']) {\n            if (!(a in Object)) {\n                continue\n            }; Object[a] = 'Proxy' in globalThis ? new globalThis.Proxy(Object[a], {\n                apply(target, thisArg, argArray) {\n                    argArray[0][symbol] ??= {};\n                    return Reflect.apply(target, thisArg, argArray);\n                },\n            }) : ((old, b, ...args) => { b[this.symbol] ??= {}; return old(b, ...args) }).bind(null, Object[a].bind(Object))\n        }\n    }\n    static __get(a: any): { [a: string]: any } {\n        return (a[this.symbol] ??= {})\n    }\n    id: string;\n    constructor() {\n        this.id = Math.random() + \"\";\n    };\n    delete(o) {\n        delete WeakMapTemp.__get(o)[this.id];\n    }\n    has(o) {\n        return this.id in WeakMapTemp.__get(o);\n    }\n    get(o) {\n        return WeakMapTemp.__get(o)[this.id]\n    }\n    set(o, v) {\n        WeakMapTemp.__get(o)[this.id] = v;\n    }\n} as any;"],"names":[],"version":3,"file":"index.d.ts.map"}