{"mappings":";;;AACA,MAAM,uCAAiB,QAAQ;AAC/B,MAAM,iDAA2B,QAAQ;AACzC,MAAM,8BAAQ;AACP,IAAI,4CAA2B,aAAa,aAAa,WAAW,OAAO,GAAG,MAAM;;aAChF,WAAW,YAAY,aAAa,WAAW,MAAM,CAAC,+BAAS;;;aAC/D,WAAW,YAAY,SAAS,OAAO,MAAM,CAAC,IAAI,CAAC,QAAQ,QAAQ,IAAO,CAAA,CAAC,CAAA;;IAClF,MAAO;QACH,IAAI,SAAS,IAAI,CAAC,QAAQ;QAC1B,CAAA,GAAA,mBAAW,CAAC,CAAC,OAAO,GAAG;QACvB,IAAI,SAAS,IAAI,CAAC,QAAQ;QAC1B,KAAK,IAAI,kBAAkB;YAAC;YAAQ;YAAS;SAAoB,CAAE;YAC/D,IAAI,CAAE,CAAA,kBAAkB,MAAK,GACzB;YACD,MAAM,CAAC,eAAe,GAAG,WAAW,aAAa,AAAC,CAAA,CAAA,QAAS,IAAI,WAAW,KAAK,CAAC,MAAM,CAAC,eAAe,EAAE;oBACvG,OAAM,MAAM,EAAE,OAAO,EAAE,QAAQ;wBAC3B,YAAY,KAAK,CAAC,QAAQ,CAAC,EAAE;wBAC7B,OAAO,MAAM,QAAQ,SAAS;oBAClC;gBACJ,EAAC,EAAG,QAAQ,KAAK,CAAC,IAAI,CAAC,YAAY,AAAC,CAAA,CAAC,KAAK,GAAG,GAAG;gBAAW,YAAY,KAAK,CAAC;gBAAI,OAAO,IAAI,MAAM;YAAM,CAAA,EAAG,IAAI,CAAC,MAAM,MAAM,CAAC,eAAe,CAAC,IAAI,CAAC;QACtJ;IACJ,CAAC;IACD,OAAO,MAAM,MAAW,EAAwB;QAC5C,IAAI,kDAA4B,sCAAgB;YAC5C,MAAM,OAAO,+CAAyB,QAAQ,IAAI,CAAC,QAAQ;YAC3D,IAAI,MAAM,OAAO,KAAK,KAAK;YAC3B,MAAM,QAAQ,YAAY,QAAQ;YAClC,qCAAe,QAAQ,IAAI,CAAC,QAAQ,EAAE;uBAAE;gBAAO,YAAY;gBAAO,UAAU;gBAAM,cAAc;YAAM;YACtG,OAAO;QACX;QACA,IAAI,wCAAkB,CAAE,CAAA,IAAI,CAAC,QAAQ,IAAI,MAAK,GAAI,qCAAe,QAAQ,IAAI,CAAC,QAAQ,EAAE;YAAE,OAAO,YAAY,QAAQ;YAAI,YAAY;YAAO,UAAU;YAAM,cAAc;QAAM;QAChL,OAAQ,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,YAAY,QAAQ;IAC1D;IAEA,aAAc;QACV,IAAI,CAAC,EAAE,GAAG,KAAK,MAAM,KAAK;IAC9B;IACA,OAAO,MAAM,EAAE;QACX,OAAO,YAAY,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC;IAC7C;IACA,IAAI,MAAM,EAAE;QACR,OAAO,IAAI,CAAC,EAAE,IAAI,YAAY,KAAK,CAAC;IACxC;IACA,IAAI,MAAM,EAAE;QACR,OAAO,YAAY,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC;IAC7C;IACA,IAAI,MAAM,EAAE,KAAK,EAAE;QACf,YAAY,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG;IACzC;AACJ","sources":["weak-map/index.ts"],"sourcesContent":["import { polyfillKeys } from \"@portal-solutions/semble-common\";\nconst defineProperty = Object?.defineProperty;\nconst getOwnPropertyDescriptor = Object?.getOwnPropertyDescriptor;\nconst symId = '__SembleWeakMap';\nexport let _WeakMap: typeof WeakMap = 'WeakMap' in globalThis ? globalThis.WeakMap : class WeakMapTemp {\n    static __symbol = 'Symbol' in globalThis ? globalThis.Symbol(symId) : symId;\n    static __create = 'create' in Object ? Object.create.bind(Object, null) : () => ({});\n    static {\n        let symbol = this.__symbol;\n        polyfillKeys[symbol] = true;\n        let create = this.__create;\n        for (var objectProperty of ['seal', 'freeze','preventExtensions']) {\n            if (!(objectProperty in Object)) {\n                continue\n            }; Object[objectProperty] = 'Proxy' in globalThis ? (apply => new globalThis.Proxy(Object[objectProperty], {\n                apply(target, thisArg, argArray) {\n                    WeakMapTemp.__get(argArray[0]);\n                    return apply(target, thisArg, argArray);\n                },\n            }))(Reflect.apply.bind(Reflect)) : ((old, b, ...args) => { WeakMapTemp.__get(b); return old(b, ...args) }).bind(null, Object[objectProperty].bind(Object))\n        }\n    }\n    static __get(target: any): { [a: string]: any } {\n        if (getOwnPropertyDescriptor && defineProperty) {\n            const desc = getOwnPropertyDescriptor(target, this.__symbol);\n            if (desc) return desc.value;\n            const value = WeakMapTemp.__create();\n            defineProperty(target, this.__symbol, { value, enumerable: false, writable: true, configurable: false });\n            return value;\n        }\n        if (defineProperty && !(this.__symbol in target)) defineProperty(target, this.__symbol, { value: WeakMapTemp.__create(), enumerable: false, writable: true, configurable: false });\n        return (target[this.__symbol] ??= WeakMapTemp.__create())\n    }\n    id: string;\n    constructor() {\n        this.id = Math.random() + \"\";\n    };\n    delete(object) {\n        delete WeakMapTemp.__get(object)[this.id];\n    }\n    has(object) {\n        return this.id in WeakMapTemp.__get(object);\n    }\n    get(object) {\n        return WeakMapTemp.__get(object)[this.id]\n    }\n    set(object, value) {\n        WeakMapTemp.__get(object)[this.id] = value;\n    }\n} as any;"],"names":[],"version":3,"file":"index.js.map"}