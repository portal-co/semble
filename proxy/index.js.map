{"mappings":"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","sources":["proxy/index.ts"],"sourcesContent":["import { _WeakMap } from \"@portal-solutions/semble-weak-map\";\n// import { polyfillKeys } from \"@portal-solutions/semble-common\";\nimport { isPolyfillKey } from \"@portal-solutions/semble-common\";\n\nconst _proxyData: WeakMap<any, { object: any, handler: ProxyHandler<any> }> = new _WeakMap();\nfunction protoChain<T extends object, X extends keyof T, U, Args extends unknown[]>(val: T, key: X, f: <T2 extends { [X2 in X]: any }>(t: T2, key: X, ...args: Args) => U, ...args: Args): U {\n    while (1) {\n        if (_Reflect.getOwnPropertyDescriptor(val, key)) {\n            return f(val, key, ...args);\n        }\n        val = _Reflect.getPrototypeOf(val) as T; //Simulate tail recursion\n    }\n    throw ``\n}\nfunction protoChained<T extends object, X extends keyof T, U, Args extends unknown[]>(f: <T2 extends { [X2 in X]: any }>(t: T2, key: X, ...args: Args) => U): (val: T, key: X, ...args: Args) => U {\n    return (val, key, ...args) => protoChain(val, key, f, ...args);\n}\n\nexport const _Reflect: typeof Reflect = 'Reflect' in globalThis ? globalThis.Reflect : ({\n    apply: Function.prototype.apply.call.bind(Function.prototype.apply),\n    construct: (target, args, self) => _proxyData.has(target) && 'construct' in _proxyData.get(target)!.handler! ? _proxyData.get(target)!.handler.construct!(_proxyData.get(target)!.object, args, self) : target === self ? new target(...args) : _Reflect.apply(target, self, args),\n    get: protoChained((object, key) => _proxyData.has(object) && 'get' in _proxyData.get(object)!.handler && !isPolyfillKey(key) ? _proxyData.get(object)!.handler.get!(_proxyData.get(object)!.object, key, object) : object[key]),\n    set: protoChained((object, key, value) => _proxyData.has(object) && 'set' in _proxyData.get(object)!.handler && !isPolyfillKey(key) ? (_proxyData.get(object)!.handler.set!(_proxyData.get(object)!.object, key, value, object)) : (((object as any)[key] = value), true)),\n    setPrototypeOf: ((old, object, proto) => (old(object, proto), true)).bind(null, 'setPrototypeOf' in Object ? Object.setPrototypeOf.bind(Object) : ((object, proto) => (object.__proto__ = proto, object)))\n}) as any;\nexport const _Proxy: typeof Proxy = 'Proxy' in globalThis ? globalThis.Proxy : (class ProxyTemp extends Function {\n    static __call = Function.prototype.call.call.bind(Function.prototype.call);\n    constructor(object, handler: ProxyHandler<any>) {\n        if (false) super(); //Obey TS\n        const m = ProxyTemp.__create(object, handler);\n        _Reflect.setPrototypeOf(m, ProxyTemp.prototype);\n        return m\n    }\n    static __create(object, handler: ProxyHandler<any>) {\n        const fn = function (...args) {\n            if (this instanceof fn) {\n                if ('construct' in handler) {\n                    return handler.construct!(object, args, this);\n                }\n                return new object(...args);\n            } else {\n                if ('apply' in handler) {\n                    return handler.apply!(object, this, args);\n                }\n                return ProxyTemp.__call(object, this, ...args);\n            }\n        };\n        _proxyData.set(fn, { object, handler });\n        return fn;\n    }\n    static {\n        for (const trap of ['defineProperty', 'getOwnPropertyDescriptor', 'getOwnPropertyDescriptors', 'freeze', 'seal', 'preventExtensions', 'getPrototypeOf', 'setPrototypeOf']) {\n            if (trap in Object) {\n                _Reflect[trap] = new ProxyTemp(trap in _Reflect ? _Reflect[trap] : Object[trap].bind(Object), {\n                    apply(target, self, args) {\n                        if (_proxyData.has(args[0])) {\n                            if (trap in _proxyData.get(args[0])?.handler!) {\n                                return _proxyData.get(args[0])?.handler?.[trap]?.(...args);\n                            } else {\n                                args[0] = _proxyData.get(args[0])!.object;\n                                return _Reflect.apply(target, self, args)\n                            }\n                        } else {\n                            return _Reflect.apply(target, self, args);\n                        }\n                    }\n                });\n                Object[trap] = new ProxyTemp(Object[trap], {\n                    apply(target, self, args) {\n                        if (_proxyData.has(args[0])) {\n                            if (trap in _proxyData.get(args[0])?.handler!) {\n                                return _proxyData.get(args[0])?.handler?.[trap]?.(...args);\n                            } else {\n                                args[0] = _proxyData.get(args[0])!.object;\n                                return _Reflect.apply(target, self, args)\n                            }\n                        } else {\n                            return _Reflect.apply(target, self, args);\n                        }\n                    }\n                });\n\n            }\n        }\n        Function.prototype.toString = new ProxyTemp(Function.prototype.toString, {\n            apply(target, thisArg, argArray) {\n                while (_proxyData.has(thisArg)) thisArg = _proxyData.get(thisArg)!.object;\n                return _Reflect.apply(target, thisArg, argArray);\n            },\n        }) as any;\n    }\n}) as any;"],"names":[],"version":3,"file":"index.js.map"}